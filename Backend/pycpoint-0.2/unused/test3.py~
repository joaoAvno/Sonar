import logging
import sys

print __module__

logger= logging.getLogger(__module__)
classlogger = logging.getLogger(self.__class__)
logger_a = logging.getLogger(self.__module__.__name__)
logger_b = logging.getLogger(self.__module__.__name__)

def function_a():
    logger_a.debug( "a message" )

def function_b():
    logger_b.debug( "b message" )


class SOAPProxy(object):
    def __init__(self, url, namespace=None, envelope_attrib=None,
                 header=None, soapaction=None):
        self.url = url
    def call_remote(self, soapmethod, **kwargs):
        classlogger.debug('#### SOAP BEFORE END ###################################')




if __name__ == "__main__":
    logging.basicConfig( stream=sys.stderr, level=logging.DEBUG )
    logger_a.setLevel( logging.DEBUG )
    logger_b.setLevel( logging.WARN )

    soap = SOAPProxy("url")
    soap.call_remote("push")
    logger.debug( "module message" )
    function_a()
    function_b()
